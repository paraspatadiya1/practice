# product_app.py
# Beginner-friendly Product Management App with Tkinter + MySQL

import tkinter as tk
from tkinter import messagebox
import mysql.connector

# Database connection (simple beginner style)
def get_connection():
    return mysql.connector.connect(
        host="localhost",
        user="root",
        password="",
        database="product_db"
    )

# Base class using Inheritance
class User:
    def __init__(self, name, email, password):
        self.name = name
        self.email = email
        self.password = password

class Customer(User):
    def __init__(self, name, email, password, balance=0):
        super().__init__(name, email, password)
        self.__balance = balance   # private field

    def get_balance(self):
        return self.__balance

    def set_balance(self, amt):
        self.__balance = amt

class ProductManager(User):
    pass

# Simple GUI App
class App:
    def __init__(self, root):
        self.root = root
        self.root.title("Product Management App")

        self.main_menu()

    def clear(self):
        for widget in self.root.winfo_children():
            widget.destroy()

    def main_menu(self):
        self.clear()
        tk.Label(self.root, text="Welcome to Product App", font=("Arial", 16)).pack(pady=10)
        tk.Button(self.root, text="Manager Login", command=self.manager_login).pack(pady=5)
        tk.Button(self.root, text="Customer Login", command=self.customer_login).pack(pady=5)
        tk.Button(self.root, text="Exit", command=self.root.quit).pack(pady=5)

    # --- Manager Part ---
    def manager_login(self):
        self.clear()
        tk.Label(self.root, text="Manager Login", font=("Arial", 14)).pack(pady=10)

        tk.Label(self.root, text="Email").pack()
        email = tk.Entry(self.root)
        email.pack()

        tk.Label(self.root, text="Password").pack()
        password = tk.Entry(self.root, show="*")
        password.pack()

        def do_login():
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("SELECT * FROM managers WHERE email=%s AND password=%s",
                        (email.get(), password.get()))
            row = cur.fetchone()
            conn.close()
            if row:
                messagebox.showinfo("Login", "Manager Login Successful")
                self.manager_menu()
            else:
                messagebox.showerror("Error", "Invalid login")

        tk.Button(self.root, text="Login", command=do_login).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.main_menu).pack(pady=5)

    def manager_menu(self):
        self.clear()
        tk.Label(self.root, text="Manager Menu", font=("Arial", 14)).pack(pady=10)
        tk.Button(self.root, text="Add Product", command=self.add_product).pack(pady=5)
        tk.Button(self.root, text="View Products", command=self.view_products).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.main_menu).pack(pady=5)

    def add_product(self):
        self.clear()
        tk.Label(self.root, text="Add Product").pack(pady=5)
        tk.Label(self.root, text="Product Name").pack()
        name = tk.Entry(self.root)
        name.pack()
        tk.Label(self.root, text="Price").pack()
        price = tk.Entry(self.root)
        price.pack()

        def save():
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("INSERT INTO products(name, price) VALUES(%s, %s)", (name.get(), price.get()))
            conn.commit()
            conn.close()
            messagebox.showinfo("Success", "Product added")
            self.manager_menu()

        tk.Button(self.root, text="Save", command=save).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.manager_menu).pack(pady=5)

    def view_products(self):
        self.clear()
        tk.Label(self.root, text="All Products", font=("Arial", 14)).pack(pady=10)
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("SELECT * FROM products")
        rows = cur.fetchall()
        conn.close()
        for r in rows:
            tk.Label(self.root, text=f"ID: {r[0]}, {r[1]} - Rs.{r[2]}").pack()
        tk.Button(self.root, text="Back", command=self.manager_menu).pack(pady=5)

    # --- Customer Part ---
    def customer_login(self):
        self.clear()
        tk.Label(self.root, text="Customer Login", font=("Arial", 14)).pack(pady=10)
        tk.Label(self.root, text="Email").pack()
        email = tk.Entry(self.root)
        email.pack()
        tk.Label(self.root, text="Password").pack()
        password = tk.Entry(self.root, show="*")
        password.pack()

        def do_login():
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("SELECT * FROM customers WHERE email=%s AND password=%s",
                        (email.get(), password.get()))
            row = cur.fetchone()
            conn.close()
            if row:
                messagebox.showinfo("Login", "Customer Login Successful")
                self.customer_menu()
            else:
                messagebox.showerror("Error", "Invalid login")

        tk.Button(self.root, text="Login", command=do_login).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.main_menu).pack(pady=5)

    def customer_menu(self):
        self.clear()
        tk.Label(self.root, text="Customer Menu", font=("Arial", 14)).pack(pady=10)
        tk.Button(self.root, text="Purchase Product", command=self.purchase_product).pack(pady=5)
        tk.Button(self.root, text="View Orders", command=self.view_orders).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.main_menu).pack(pady=5)

    def purchase_product(self):
        self.clear()
        tk.Label(self.root, text="Purchase Product").pack(pady=5)
        tk.Label(self.root, text="Product ID").pack()
        pid = tk.Entry(self.root)
        pid.pack()

        def buy():
            conn = get_connection()
            cur = conn.cursor()
            cur.execute("INSERT INTO orders(product_id) VALUES(%s)", (pid.get(),))
            conn.commit()
            conn.close()
            messagebox.showinfo("Success", "Order placed!")
            self.customer_menu()

        tk.Button(self.root, text="Buy", command=buy).pack(pady=5)
        tk.Button(self.root, text="Back", command=self.customer_menu).pack(pady=5)

    def view_orders(self):
        self.clear()
        tk.Label(self.root, text="My Orders", font=("Arial", 14)).pack(pady=10)
        conn = get_connection()
        cur = conn.cursor()
        cur.execute("SELECT * FROM orders")
        rows = cur.fetchall()
        conn.close()
        for r in rows:
            tk.Label(self.root, text=f"Order ID: {r[0]}, Product ID: {r[1]}").pack()
        tk.Button(self.root, text="Back", command=self.customer_menu).pack(pady=5)


# Run App
root = tk.Tk()
app = App(root)
root.mainloop()
